# generated by fastapi-codegen:
#   filename:  openapi.json
#   timestamp: 2024-09-28T00:14:32+00:00

from __future__ import annotations

from fastapi import APIRouter

import sys
from typing import List, Optional, Union

sys.path.append("..")
from dependencies import *

router = APIRouter(tags=['Manage access'])


@router.post(
    '/api/v1/users/{user_id}/roles',
    response_model=None,
    responses={
        '400': {'model': HTTPExceptionResponse},
        '401': {'model': HTTPExceptionResponse},
        '403': {'model': HTTPExceptionResponse},
        '422': {'model': HTTPValidationError},
    },
    tags=['Manage access'],
)
def create_user_role_api_v1_users__user_id__roles_post(
    user_id: UUID, body: BodyCreateUserRoleApiV1UsersUserIdRolesPost = ...
) -> Optional[Union[HTTPExceptionResponse, HTTPValidationError]]:
    """
    Add user role
    """
    pass


@router.delete(
    '/api/v1/users/{user_id}/roles',
    response_model=None,
    responses={
        '401': {'model': HTTPExceptionResponse},
        '403': {'model': HTTPExceptionResponse},
        '404': {'model': HTTPExceptionResponse},
        '422': {'model': HTTPValidationError},
    },
    tags=['Manage access'],
)
def delete_user_role_api_v1_users__user_id__roles_delete(
    user_id: UUID, body: BodyDeleteUserRoleApiV1UsersUserIdRolesDelete = ...
) -> Optional[Union[HTTPExceptionResponse, HTTPValidationError]]:
    """
    Delete user role
    """
    pass
