# generated by fastapi-codegen:
#   filename:  openapi.json
#   timestamp: 2024-09-28T00:14:32+00:00

from __future__ import annotations

from fastapi import APIRouter

import sys
from typing import List, Optional, Union

sys.path.append("..")
from dependencies import *


router = APIRouter(tags=['Manage roles'])


@router.get(
    '/api/v1/roles',
    response_model=List[RoleResponse],
    responses={
        '401': {'model': HTTPExceptionResponse},
        '403': {'model': HTTPExceptionResponse},
    },
    tags=['Manage roles'],
)
def list_roles_api_v1_roles_get() -> Union[List[RoleResponse], HTTPExceptionResponse]:
    """
    List of roles
    """
    pass


@router.post(
    '/api/v1/roles',
    response_model=RoleResponse,
    responses={
        '400': {'model': HTTPExceptionResponse},
        '401': {'model': HTTPExceptionResponse},
        '403': {'model': HTTPExceptionResponse},
        '422': {'model': HTTPValidationError},
    },
    tags=['Manage roles'],
)
def create_role_api_v1_roles_post(
    body: RoleBase,
) -> Union[RoleResponse, HTTPExceptionResponse, HTTPValidationError]:
    """
    Create role
    """
    pass


@router.delete(
    '/api/v1/roles/{role_id}',
    response_model=None,
    responses={
        '401': {'model': HTTPExceptionResponse},
        '403': {'model': HTTPExceptionResponse},
        '404': {'model': HTTPExceptionResponse},
        '422': {'model': HTTPValidationError},
    },
    tags=['Manage roles'],
)
def delete_role_api_v1_roles__role_id__delete(
    role_id: UUID,
) -> Optional[Union[HTTPExceptionResponse, HTTPValidationError]]:
    """
    Delete role
    """
    pass


@router.patch(
    '/api/v1/roles/{role_id}',
    response_model=RoleResponse,
    responses={
        '401': {'model': HTTPExceptionResponse},
        '403': {'model': HTTPExceptionResponse},
        '404': {'model': HTTPExceptionResponse},
        '422': {'model': HTTPValidationError},
    },
    tags=['Manage roles'],
)
def patch_role_api_v1_roles__role_id__patch(
    role_id: UUID, body: RoleBase = ...
) -> Union[RoleResponse, HTTPExceptionResponse, HTTPValidationError]:
    """
    Change role
    """
    pass
